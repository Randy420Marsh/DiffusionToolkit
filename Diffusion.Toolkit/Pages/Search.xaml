<local:NavigationPage x:Class="Diffusion.Toolkit.Pages.Search"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                xmlns:local="clr-namespace:Diffusion.Toolkit.Pages"
                xmlns:models="clr-namespace:Diffusion.Toolkit.Models"
                xmlns:toolkit="clr-namespace:Diffusion.Toolkit"
                xmlns:classes="clr-namespace:Diffusion.Toolkit.Classes"
                xmlns:controls="clr-namespace:Diffusion.Toolkit.Controls"
                xmlns:converters="clr-namespace:Diffusion.Toolkit.Converters"
                xmlns:fa="http://schemas.fontawesome.io/icons/"
                xmlns:common="clr-namespace:Diffusion.Toolkit.Common"
                xmlns:lex="http://wpflocalizeextension.codeplex.com"
                xmlns:behaviors="clr-namespace:Diffusion.Toolkit.Behaviors"
                xmlns:system="clr-namespace:System;assembly=System.Runtime"
                xmlns:mdXaml="clr-namespace:MdXaml;assembly=MdXaml"
                lex:LocalizeDictionary.Provider="{StaticResource LocalizationProvider}"
                lex:LocalizeDictionary.Separation="."
                lex:LocalizeDictionary.DefaultProvider="{StaticResource LocalizationProvider}"
                mc:Ignorable="d" 
                d:DataContext="{d:DesignInstance models:SearchModel, IsDesignTimeCreatable=True}"
                d:DesignHeight="615" d:DesignWidth="800"
                Title="Search">
    <local:NavigationPage.InputBindings>
        <KeyBinding Modifiers="Control" Key="F" Command="{Binding ShowFilter}"></KeyBinding>
    </local:NavigationPage.InputBindings>
    <local:NavigationPage.Resources>
        <ResourceDictionary>
            <common:BindingProxy x:Key="Proxy" Data="{Binding MainModel}" />
            <common:BindingProxy x:Key="SearchProxy" Data="{Binding .}" />
            <converters:IntToVisibilityConverter x:Key="intToVis"></converters:IntToVisibilityConverter>
            <converters:StringToVisibilityConverter x:Key="strToVis"></converters:StringToVisibilityConverter>
            <converters:BoolToVisibilityConverter x:Key="boolToVis"></converters:BoolToVisibilityConverter>
            <converters:InverseBoolToVisibilityConverter x:Key="invBoolToVis"></converters:InverseBoolToVisibilityConverter>
            <converters:BoolToVisibilityCollapsedConverter x:Key="boolToVisCol"></converters:BoolToVisibilityCollapsedConverter>
            <converters:InverseBoolToVisibilityConverter x:Key="invBoolToVisCol"></converters:InverseBoolToVisibilityConverter>
            <converters:FolderModeVisibilityConverter x:Key="addrVis"></converters:FolderModeVisibilityConverter>
            <converters:FilterActiveConverter x:Key="FilterActiveConverter"></converters:FilterActiveConverter>
            <converters:SizeConverter x:Key="SizeConverter"></converters:SizeConverter>
            <converters:ZeroConverter x:Key="ZeroConverter"></converters:ZeroConverter>
            <converters:NumberFormatConverter x:Key="NumberFormatConverter"></converters:NumberFormatConverter>
            <converters:FolderDepthConverter x:Key="FolderDepthConverter"></converters:FolderDepthConverter>
            <converters:FolderStateConverter x:Key="FolderStateConverter"></converters:FolderStateConverter>
            <converters:FolderStateVisibilityConverter x:Key="FolderStateVisibilityConverter"></converters:FolderStateVisibilityConverter>
            <converters:FolderUnavailableConverter x:Key="FolderUnavailableConverter"></converters:FolderUnavailableConverter>
            <converters:InvBoolToOpacityConverter x:Key="InvBoolToOpacityConverter"></converters:InvBoolToOpacityConverter>
            <converters:MultiBoolToVisibilityCollapsedConverter x:Key="MultiBoolToVisibilityCollapsedConverter"></converters:MultiBoolToVisibilityCollapsedConverter>
            <converters:InvertBoolConverter x:Key="InvertBoolConverter"></converters:InvertBoolConverter>
            <converters:UnderlineConverter x:Key="UnderlineConverter"></converters:UnderlineConverter>
        </ResourceDictionary>
    </local:NavigationPage.Resources>
    <Grid x:Name="MainGrid" Background="{DynamicResource {x:Static SystemColors.ControlBrush}}">

        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>


        <Grid  Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="0"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="100"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="70"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Label VerticalAlignment="Center" FontSize="22" FontWeight="DemiBold" Content="{Binding ModeName}"></Label>

                    <Button Content="{lex:Loc Search.ForDeletion.Empty}" Margin="10,0,0,0" Height="25" MinWidth="120" Click="EmptyTrash_OnClick">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMode}" Value="deleted">
                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>


                    <Button Content="{lex:Loc Search.Folders.AddRoot}" Margin="10,0,0,0" Height="25" MinWidth="120" Click="AddRootFolder_OnClick">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentMode}" Value="folders">
                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>


                </StackPanel>

                <StackPanel Grid.Column="2" VerticalAlignment="Center" Margin="0,0,10,0" Orientation="Horizontal">
                    <Border Visibility="{Binding MainModel.HasSelectedModels, Converter={StaticResource boolToVisCol}}" Background="SeaGreen" CornerRadius="6" Height="24" Padding="6,0,6,0" Margin="0,0,10,0">
                        <StackPanel Orientation="Horizontal">
                            <Label FontSize="10" Content="{lex:Loc Search.Navigation.Models}"></Label>
                            <Label FontSize="12" Content="{Binding MainModel.SelectedModelsCount}"></Label>
                            <Button Style="{StaticResource StaticButton}" Command="{Binding MainModel.ClearModelsCommand}">
                                <fa:FontAwesome FontSize="10" Icon="Close"></fa:FontAwesome>
                            </Button>
                        </StackPanel>
                    </Border>
                    <Border Visibility="{Binding MainModel.HasSelectedAlbums, Converter={StaticResource boolToVisCol}}" Background="SeaGreen" CornerRadius="6" Height="24" Padding="6,0,6,0">
                        <StackPanel Orientation="Horizontal">
                            <Label FontSize="10">Albums:</Label>
                            <Label FontSize="12" Content="{Binding MainModel.SelectedAlbumsCount}"></Label>
                            <Button Style="{StaticResource StaticButton}" Command="{Binding MainModel.ClearAlbumsCommand}">
                                <fa:FontAwesome FontSize="10" Icon="Close"></fa:FontAwesome>
                            </Button>
                        </StackPanel>
                    </Border>
                </StackPanel>
                <Label Grid.Column="3" FontSize="12" VerticalContentAlignment="Center" Content="{lex:Loc Search.SortBy}"></Label>
                <ComboBox Height="28" VerticalContentAlignment="Center" ItemsSource="{Binding SortOptions}" DisplayMemberPath="Name" SelectedValue="{Binding SortBy}" SelectedValuePath="Value"  Grid.Column="4" Margin="0,0,10,0">
                </ComboBox>
                <ComboBox Height="28" Width="60" VerticalContentAlignment="Center" ItemsSource="{Binding SortOrderOptions}" DisplayMemberPath="Name" SelectedValue="{Binding SortDirection}" SelectedValuePath="Value" Grid.Column="5" Margin="0,0,10,0">
                </ComboBox>

            </Grid>
            <Grid Grid.Row="1" Margin="2" Visibility="Collapsed">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="28"/>
                    <ColumnDefinition Width="28"/>
                    <ColumnDefinition Width="28"/>
                    <ColumnDefinition Width="28"/>
                    <ColumnDefinition Width="28"/>
                </Grid.ColumnDefinitions>

                <!--<Button DockPanel.Dock="Left" Width="28" Command="{Binding ClearFilter}" >
                        <fa:ImageAwesome ToolTip="Help" Icon="QuestionCircleOutline" Width="16" Margin="2"  Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                        </fa:ImageAwesome>
                    </Button>-->
                <Grid Grid.Column="0">

                    <ComboBox x:Name="SearchTermTextBox" 
                                  Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" 
                                  ItemsSource="{Binding SearchHistory}"
                                  PreviewKeyDown="SearchTermTextBox_OnPreviewKeyDown"
                                  IsEditable="True"
                                  Padding="5,0,0,0"
                                  HorizontalAlignment="Stretch" 
                                  VerticalContentAlignment="Center">
                        <ComboBox.InputBindings>
                            <KeyBinding Command="{Binding HideDropDown}" Key="Escape" />
                            <KeyBinding Command="{Binding SearchCommand}" Key="Return" CommandParameter="ManualSearch" />
                        </ComboBox.InputBindings>
                    </ComboBox>

                    <TextBlock IsHitTestVisible="False" 
                                   Text="{Binding SearchHint}" FontStyle="Italic" 
                                   VerticalAlignment="Center" 
                                   HorizontalAlignment="Left" 
                                   Padding="8,0,0,0" Foreground="DarkGray">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Text, ElementName=SearchTermTextBox}" Value="">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
                <Button Style="{DynamicResource BorderlessButton}" ToolTip="{lex:Loc Search.Buttons.ShowSearchHelp.ToolTip}" Grid.Column="1" Command="{Binding ShowSearchHelp}">
                    <fa:ImageAwesome Icon="Question" Height="16" Margin="2"  Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    </fa:ImageAwesome>
                </Button>
                <Button Style="{DynamicResource BorderlessButton}" ToolTip="{lex:Loc Search.Buttons.ShowSearchSettings.ToolTip}" Grid.Column="2" Command="{Binding ShowSearchSettings}">
                    <fa:ImageAwesome Icon="Sliders" Height="16" Margin="2"  Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    </fa:ImageAwesome>
                </Button>
                <Button Style="{DynamicResource BorderlessButton}" ToolTip="{lex:Loc Search.Buttons.Refresh.ToolTip}" Grid.Column="3" Width="28" Command="{Binding Refresh}" >
                    <fa:ImageAwesome Icon="Refresh" Height="16" Margin="2"  Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    </fa:ImageAwesome>
                </Button>
                <Button Style="{DynamicResource BorderlessButton}" ToolTip="{lex:Loc Search.Buttons.Clear.ToolTip}" Grid.Column="4" Width="28" Command="{Binding ClearSearch}" >
                    <fa:ImageAwesome Icon="Close" Height="16" Margin="2"  Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    </fa:ImageAwesome>
                </Button>
                <Button Style="{DynamicResource BorderlessButton}" ToolTip="{lex:Loc Search.Buttons.ShowFilter.ToolTip}" Grid.Column="5" Command="{Binding ShowFilter}" Background="{Binding Filter.IsActive, Converter={StaticResource FilterActiveConverter}}">
                    <fa:ImageAwesome Icon="Filter" Height="16" Margin="2"  Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                    </fa:ImageAwesome>
                </Button>
            </Grid>
            <Grid Grid.Row="2"  Margin="2">
                <DockPanel>
                    <!--<DockPanel Margin="0,0,0,5" Visibility="{Binding CurrentViewMode, Converter={StaticResource albVis}}" DockPanel.Dock="Top">
                        <Button ToolTip="{lex:Loc Search.AddressBar.Buttons.Home.ToolTop}" DockPanel.Dock="Left" Width="28" Command="{Binding GoHome}">
                            <fa:ImageAwesome Icon="Home" Width="16" Margin="2"  Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                            </fa:ImageAwesome>
                        </Button>
                        <Label  Height="24"
                                  Padding="5,0,0,0"
                                  HorizontalAlignment="Stretch" 
                                  VerticalContentAlignment="Center"
                                  Content="{Binding MainModel.CurrentAlbum.Name}"
                        ></Label>
                    </DockPanel>-->
                    <Grid DockPanel.Dock="Bottom">
                        <Grid x:Name="NavigationThumbnailGrid"  Background="{x:Null}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="5"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>


                            <ScrollViewer Focusable="True" x:Name="NavigationScrollViewer" Grid.Column="0" VerticalScrollBarVisibility="Auto">
                                <StackPanel>
                                    <!--<controls:AccordionControl HeaderBackground="#80000000" Margin="0,0,0,5"
                                                               Visibility="{Binding DataContext.MainModel.Settings.NavigationSection.ShowDate, Converter={StaticResource boolToVisCol}, ElementName=NavigationThumbnailGrid}"
                                                               State="{Binding DataContext.NavigationSection.DateState, ElementName=NavigationThumbnailGrid, Mode=TwoWay}" Header="{lex:Loc Search.Navigation.Date}">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="24"/>
                                                <RowDefinition Height="24"/>
                                                <RowDefinition Height="24"/>
                                            </Grid.RowDefinitions>
                                            <Grid>
                                                <StackPanel Orientation="Horizontal">
                                                    <RadioButton>Date</RadioButton>
                                                    <RadioButton Margin="10,0,0,0">Days</RadioButton>
                                                    <RadioButton Margin="10,0,0,0">Weeks</RadioButton>
                                                </StackPanel>
                                            </Grid>
                                            <Grid Grid.Row="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="30"></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>
                                                    <ColumnDefinition Width="20"></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                                <fa:FontAwesome Icon="Filter" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource DisabledForegroundBrush}">
                                                </fa:FontAwesome>
                                                <DatePicker Grid.Column="1"></DatePicker>
                                                <CheckBox VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2"></CheckBox>
                                                <DatePicker Grid.Column="3"></DatePicker>
                                            </Grid>
                                            <Grid Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>
                                                    <ColumnDefinition></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="0" Style="{StaticResource BorderlessButton}">
                                                    <fa:FontAwesome Icon="Backward"></fa:FontAwesome>
                                                </Button>
                                                <Button Grid.Column="1" Style="{StaticResource BorderlessButton}">
                                                    <fa:FontAwesome Icon="Stop"></fa:FontAwesome>
                                                </Button>
                                                <Button Grid.Column="2" Style="{StaticResource BorderlessButton}">
                                                    <fa:FontAwesome Icon="Forward"></fa:FontAwesome>
                                                </Button>
                                            </Grid>
                                        </Grid>
                                    </controls:AccordionControl>-->

                                    <controls:AccordionControl HeaderBackground="#80000000"  Margin="0,0,0,5"
                                                               Header="{lex:Loc Search.Navigation.Folders}"
                                                               State="{Binding DataContext.NavigationSection.FolderState, ElementName=NavigationThumbnailGrid, Mode=TwoWay}" 
                                                               Visibility="{Binding DataContext.MainModel.Settings.NavigationSection.ShowFolders, Converter={StaticResource boolToVisCol}, ElementName=NavigationThumbnailGrid}"
                                                               CanResize="True"
                                                               >
                                        <controls:AccordionControl.ButtonAreaContent>
                                            <Grid Background="{x:Null}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="26"/>
                                                    <ColumnDefinition Width="26"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="2" Style="{StaticResource BorderlessButton}" 
                                                        ToolTip="{lex:Loc Search.Folders.Buttons.Refresh.ToolTip}" 
                                                        Command="{Binding MainModel.ReloadFoldersCommand}"
                                                        IsEnabled="{Binding MainModel.FoldersBusy, Converter={StaticResource InvertBoolConverter}}"
                                                        >
                                                    <fa:FontAwesome Icon="Refresh"></fa:FontAwesome>
                                                </Button>
                                                <!--<Button Grid.Column="2" Style="{StaticResource BorderlessButton}" ToolTip="{lex:Loc Search.Folders.Buttons.Manage.ToopTip}" Command="{Binding MainModel.ManageFoldersCommand}">
                                                    <fa:FontAwesome Icon="Gear"></fa:FontAwesome>
                                                </Button>-->
                                            </Grid>
                                        </controls:AccordionControl.ButtonAreaContent>

                                        <Grid>
                                            <ItemsControl ItemsSource="{Binding Path=MainModel.Folders}" PreviewMouseWheel="UIElement_OnPreviewMouseWheel">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid
                                                            Focusable="True"
                                                        Tag="{Binding}" 
                                                        MouseDown="Folder_OnClick"
                                                        MouseMove="Folder_Move"
                                                        MouseUp="Folder_Release"
                                                        Visibility="{Binding Visible, Converter={StaticResource boolToVisCol}}"
                                                        AllowDrop="True" 
                                                        behaviors:DTBehaviors.IsFocused="{Binding IsSelected}"
                                                        behaviors:DTBehaviors.UseIsDraggedHandlers="True"
                                                        Drop="DropImagesOnFolder">
                                                            <Grid.ContextMenu>
                                                                <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.RescanFolderCommand}"
                                                                          CommandParameter="{Binding .}"
                                                                          Header="{lex:Loc Search.Navigation.Folders.ContextMenu.Rescan}"></MenuItem>
                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.ScanFolderCommand}"
                                                                              CommandParameter="{Binding .}"
                                                                              Header="{lex:Loc Search.Navigation.Folders.ContextMenu.ScanNew}"></MenuItem>
                                                                    <Separator></Separator>
                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.RefreshFolderCommand}"
                                                                              CommandParameter="{Binding .}"
                                                                              Header="{lex:Loc Search.Navigation.Folders.ContextMenu.Refresh}"></MenuItem>
                                                                    <Separator></Separator>
                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.CreateFolderCommand}"
                                                                              CommandParameter="{Binding .}"
                                                                              IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanCreateFolder}" 
                                                                              Header="{lex:Loc Search.Navigation.Folders.ContextMenu.CreateFolder}"></MenuItem>
                                                                    <!--<MenuItem IsEnabled="{Binding NavigationSection.Folders.CanDelete}" Header="Add to Album"></MenuItem>-->
                                                                    <!--<MenuItem IsEnabled="{Binding NavigationSection.Folders.CanDelete}" Header="Send to Recycle Bin"></MenuItem>-->

                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.RenameFolderCommand}" 
                                                                          CommandParameter="{Binding .}"
                                                                          IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanRename}" 
                                                                          Header="{lex:Loc Search.Navigation.Folders.ContextMenu.Rename}"></MenuItem>

                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.RemoveFolderCommand}" 
                                                                              CommandParameter="{Binding .}"
                                                                              IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanRemove}" 
                                                                              Header="{lex:Loc Search.Navigation.Folders.ContextMenu.Remove}"></MenuItem>

                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.DeleteFolderCommand}" 
                                                                          CommandParameter="{Binding .}"
                                                                          IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanDelete}" 
                                                                          Header="{lex:Loc Search.Navigation.Folders.ContextMenu.Delete}"></MenuItem>

                                                                    <Separator></Separator>

                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.ArchiveFolderCommand}" 
                                                                          CommandParameter="{StaticResource TrueValue}"
                                                                          IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanArchive}" 
                                                                          Header="{lex:Loc Search.Navigation.Folders.ContextMenu.Archive}"></MenuItem>

                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.ArchiveFolderRecursiveCommand}" 
                                                                          CommandParameter="{StaticResource TrueValue}"
                                                                          IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanArchiveTree}" 
                                                                          Header="{lex:Loc Search.Navigation.Folders.ContextMenu.ArchiveRecursive}"></MenuItem>

                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.ArchiveFolderCommand}" 
                                                                          CommandParameter="{StaticResource FalseValue}"
                                                                          IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanUnarchive}" 
                                                                          Header="{lex:Loc Search.Navigation.Folders.ContextMenu.Unarchive}"></MenuItem>

                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.ArchiveFolderRecursiveCommand}" 
                                                                          CommandParameter="{StaticResource FalseValue}"
                                                                          IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanUnarchiveTree}" 
                                                                          Header="{lex:Loc Search.Navigation.Folders.ContextMenu.UnarchiveRecursive}"></MenuItem>

                                                                    <Separator></Separator>

                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.ExcludeFolderCommand}" 
                                                                              CommandParameter="{StaticResource TrueValue}"
                                                                              IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanExclude}" 
                                                                              Header="{lex:Loc Search.Navigation.Folders.ContextMenu.Exclude}"></MenuItem>

                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.ExcludeFolderRecursiveCommand}" 
                                                                              CommandParameter="{StaticResource TrueValue}"
                                                                              IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanExcludeTree}" 
                                                                              Header="{lex:Loc Search.Navigation.Folders.ContextMenu.ExcludeRecursive}"></MenuItem>


                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.ExcludeFolderCommand}" 
                                                                              CommandParameter="{StaticResource FalseValue}"
                                                                              IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanUnexclude}" 
                                                                              Header="{lex:Loc Search.Navigation.Folders.ContextMenu.Unexclude}"></MenuItem>

                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.ExcludeFolderRecursiveCommand}" 
                                                                              CommandParameter="{StaticResource FalseValue}"
                                                                              IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanUnexcludeTree}" 
                                                                              Header="{lex:Loc Search.Navigation.Folders.ContextMenu.UnexcludeRecursive}"></MenuItem>

                                                                    <Separator></Separator>
                                                                    <MenuItem Command="{Binding Source={StaticResource Proxy}, Path=Data.ShowInExplorerCommand}" 
                                                                          CommandParameter="{Binding .}"
                                                                          IsEnabled="{Binding Source={StaticResource SearchProxy}, Path=Data.NavigationSection.FoldersSection.CanShowInExplorer}"
                                                                          Header="{lex:Loc Search.Navigation.Folders.ContextMenu.ShowInExplorer}"></MenuItem>
                                                                </ContextMenu>
                                                            </Grid.ContextMenu>
                                                            <Grid.Resources>
                                                                <Style TargetType="Grid">
                                                                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"></Setter>
                                                                    <Style.Triggers>
                                                                        <Trigger Property="behaviors:DTBehaviors.IsDraggedOn" Value="True" >
                                                                            <Setter Property="Background" Value="{DynamicResource BgHighlightBrush}"></Setter>
                                                                        </Trigger>
                                                                        <DataTrigger Binding="{Binding IsSelected}" Value="true">
                                                                            <Setter Property="Background" Value="{DynamicResource HighlightBrush}"></Setter>
                                                                        </DataTrigger>
                                                                        <Trigger Property="IsFocused" Value="True">
                                                                            <Setter Property="Background" Value="{DynamicResource HighlightBrush}"></Setter>
                                                                        </Trigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Background" Value="{DynamicResource BgHighlightBrush}"></Setter>
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Grid.Resources>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="{Binding Depth, Converter={StaticResource FolderDepthConverter}}"/>
                                                                <ColumnDefinition Width="15"/>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="15"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid Grid.Column="1" Background="Transparent"  PreviewMouseLeftButtonDown="Expander_OnMouseDown">
                                                                <fa:ImageAwesome  Rotation="{Binding State, Converter={StaticResource FolderStateConverter}}" Visibility="{Binding HasChildren, Converter={StaticResource boolToVis}}" Icon="AngleRight" Height="8" Foreground="{DynamicResource ForegroundBrush}"  />
                                                            </Grid>
                                                            <TextBlock Grid.Column="2" HorizontalAlignment="Left" 
                                                                       FontFamily="Calibri" FontWeight="Light" FontSize="16" Padding="4" 
                                                                       TextTrimming="CharacterEllipsis"
                                                                       ToolTip="{Binding Name}"
                                                                       Text="{Binding Name}" 
                                                                       TextWrapping="NoWrap" 
                                                                       TextAlignment="Left" PreviewMouseDown="Folder_OnClick">
                                                                <TextBlock.Resources>
                                                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                                        <Setter Property="Opacity" Value="0.25"></Setter>
                                                                        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"></Setter>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Path=IsScanned, Mode=OneWay}" Value="True">
                                                                                <Setter  Property="Opacity" Value="1"></Setter>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Path=IsUnavailable, Mode=OneWay}" Value="True">
                                                                                <Setter  Property="TextDecorations" Value="{x:Static TextDecorations.Strikethrough}"></Setter>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding Path=IsExcluded, Mode=OneWay}" Value="True">
                                                                                <Setter  Property="Foreground" Value="Red"></Setter>
                                                                            </DataTrigger>
                                                                            <DataTrigger Value="True">
                                                                                <DataTrigger.Binding>
                                                                                    <Binding Path="(behaviors:DTBehaviors.IsDraggedOn)" 
                                                                                        RelativeSource="{RelativeSource AncestorType=Grid}" />
                                                                                </DataTrigger.Binding>
                                                                                <Setter Property="Text" Value="Red"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBlock.Resources>

                                                            </TextBlock>
                                                            <fa:FontAwesome Grid.Column="3" Icon="Lock" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                                            Visibility="{Binding IsBusy, Converter={StaticResource invBoolToVis}}">
                                                                <fa:FontAwesome.Resources>
                                                                    <Style TargetType="fa:FontAwesome">
                                                                        <Setter Property="Opacity" Value="0.25"></Setter>
                                                                        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"></Setter>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Path=IsArchived, Mode=OneWay}" Value="{StaticResource TrueValue}">
                                                                                <Setter  Property="Opacity" Value="1"></Setter>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </fa:FontAwesome.Resources>

                                                            </fa:FontAwesome>
                                                            <fa:FontAwesome Grid.Column="4" Icon="Spinner" Spin="True" SpinDuration="1" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center" 
                                                                            Visibility="{Binding IsBusy, Converter={StaticResource boolToVis}}"
                                                                            >
                                                                <fa:FontAwesome.Resources>
                                                                    <Style TargetType="fa:FontAwesome">
                                                                        <Setter Property="Opacity" Value="0.25"></Setter>
                                                                        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"></Setter>
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Path=IsArchived, Mode=OneWay}" Value="{StaticResource TrueValue}">
                                                                                <Setter  Property="Opacity" Value="1"></Setter>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </fa:FontAwesome.Resources>

                                                            </fa:FontAwesome>
                                                            <!--<fa:FontAwesome Grid.Column="5" Icon="Ban" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="{Binding IsExcluded, Converter={StaticResource InvBoolToOpacityConverter}, Mode=OneWay}" Foreground="{DynamicResource ForegroundBrush}"></fa:FontAwesome>-->
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemContainerStyle>
                                                    <Style TargetType="ContentPresenter">
                                                        <EventSetter Event="PreviewKeyDown" Handler="Folder_OnKeyDown"/>
                                                    </Style>
                                                </ItemsControl.ItemContainerStyle>
                                            </ItemsControl>
                                            <Grid Background="#60000000" Visibility="{Binding MainModel.FoldersBusy, Converter={StaticResource boolToVisCol}}"></Grid>
                                        </Grid>

                                    </controls:AccordionControl>


                                    <controls:AccordionControl 
                                        HeaderBackground="#80000000"  Margin="0,0,0,5"
                                        Header="{lex:Loc Search.Navigation.Models}"
                                        Visibility="{Binding DataContext.MainModel.Settings.NavigationSection.ShowModels, Converter={StaticResource boolToVisCol}, ElementName=NavigationThumbnailGrid}"
                                        State="{Binding DataContext.NavigationSection.ModelState, ElementName=NavigationThumbnailGrid, Mode=TwoWay}" 
                                        CanResize="True"
                                        >
                                        <controls:AccordionControl.ButtonAreaContent>
                                            <Grid Background="{x:Null}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="26"/>
                                                    <ColumnDefinition Width="26"/>
                                                    <ColumnDefinition Width="26"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="3" Style="{StaticResource BorderlessButton}" Visibility="{Binding MainModel.HasSelectedModels, Converter={StaticResource boolToVis}}" ToolTip="{lex:Loc Search.Albums.Buttons.ClearModels.ToolTip}" Command="{Binding MainModel.ClearModelsCommand}">
                                                    <fa:FontAwesome Icon="SquareOutline"></fa:FontAwesome>
                                                </Button>
                                                <!--<Button Grid.Column="2" Style="{StaticResource BorderlessButton}" ToolTip="{lex:Loc Search.Albums.Buttons.SortAlbums.ToolTip}" Command="{Binding MainModel.SortAlbumCommand}">
                                                    <fa:FontAwesome Icon="Sort"></fa:FontAwesome>
                                                </Button>
                                                <Button Grid.Column="3" Style="{StaticResource BorderlessButton}" ToolTip="{lex:Loc Search.Albums.Buttons.CreateAlbum.ToolTip}" Command="{Binding MainModel.CreateAlbumCommand}">
                                                    <fa:FontAwesome Icon="Plus"></fa:FontAwesome>
                                                </Button>-->
                                            </Grid>
                                        </controls:AccordionControl.ButtonAreaContent>
                                        <ItemsControl ItemsSource="{Binding Path=MainModel.ImageModels}" PreviewMouseWheel="UIElement_OnPreviewMouseWheel">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Background="Transparent" HorizontalAlignment="Stretch" Margin="2,0,2,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="20"/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding IsTicked}"></CheckBox>
                                                        <Button Grid.Column="1" Style="{StaticResource SmallButton}" 
                                                                ToolTip="{Binding Name}"
                                                            Tag="{Binding Path=DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox, AncestorLevel=1}}" 
                                                            Click="Model_OnClick">
                                                            <Button.Template>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid  Background="{TemplateBinding Panel.Background}">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="0"></ColumnDefinition>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition Width="70"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <fa:FontAwesome Icon="Filter" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource DisabledForegroundBrush}"></fa:FontAwesome>
                                                                        <Label FontFamily="Calibri" FontWeight="Light" FontSize="16" Padding="4" Grid.Column="1"  Content="{Binding Name}"></Label>
                                                                        <Label FontFamily="Calibri" FontWeight="Light" FontSize="16"  Padding="4" Grid.Column="2" Content="{Binding ImageCount, Converter={StaticResource NumberFormatConverter}}" HorizontalAlignment="Right"></Label>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Button.Template>
                                                        </Button>
                                                    </Grid>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                    </controls:AccordionControl>

                                    <controls:AccordionControl 
                                        HeaderBackground="#80000000"  Margin="0,0,0,5"
                                        Header="{lex:Loc Search.Navigation.Albums}"
                                        Visibility="{Binding DataContext.MainModel.Settings.NavigationSection.ShowAlbums, Converter={StaticResource boolToVisCol}, ElementName=NavigationThumbnailGrid}"
                                        State="{Binding DataContext.NavigationSection.AlbumState, ElementName=NavigationThumbnailGrid, Mode=TwoWay}"  
                                        CanResize="True"
                                        >
                                        <controls:AccordionControl.ButtonAreaContent>
                                            <Grid Background="{x:Null}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="26"/>
                                                    <ColumnDefinition Width="26"/>
                                                    <ColumnDefinition Width="26"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="1" Style="{StaticResource BorderlessButton}" Visibility="{Binding MainModel.HasSelectedAlbums, Converter={StaticResource boolToVis}}" ToolTip="{lex:Loc Search.Albums.Buttons.ClearAlbums.ToolTip}" Command="{Binding MainModel.ClearAlbumsCommand}">
                                                    <fa:FontAwesome Icon="SquareOutline"></fa:FontAwesome>
                                                </Button>
                                                <Button Grid.Column="2" Style="{StaticResource BorderlessButton}" ToolTip="{lex:Loc Search.Albums.Buttons.SortAlbums.ToolTip}" Command="{Binding MainModel.SortAlbumCommand}">
                                                    <fa:FontAwesome Icon="Sort"></fa:FontAwesome>
                                                </Button>
                                                <Button Grid.Column="3" Style="{StaticResource BorderlessButton}" ToolTip="{lex:Loc Search.Albums.Buttons.CreateAlbum.ToolTip}" Command="{Binding MainModel.CreateAlbumCommand}">
                                                    <fa:FontAwesome Icon="Plus"></fa:FontAwesome>
                                                </Button>
                                            </Grid>
                                        </controls:AccordionControl.ButtonAreaContent>

                                        <ItemsControl ItemsSource="{Binding Path=MainModel.Albums}" PreviewMouseWheel="UIElement_OnPreviewMouseWheel">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Background="Transparent" HorizontalAlignment="Stretch" Margin="2,0,2,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="20"/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <CheckBox VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding IsTicked}" Click="AlbumCheck_OnClick"></CheckBox>
                                                        <Button Grid.Column="1" Style="{StaticResource SmallButton}" 
                                                                Tag="{Binding .}"
                                                                AllowDrop="True" 
                                                                ToolTip="{Binding Name}"
                                                                Drop="DropImagesOnAlbum" 
                                                                behaviors:DTBehaviors.UseIsDraggedHandlers="True"
                                                                Click="Album_OnClick" RenderTransformOrigin="0.179,0.476">
                                                            <Button.ContextMenu>
                                                                <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                                    <MenuItem Header="{lex:Loc Search.Navigation.Albums.ContextMenu.Rename}" Command="{Binding Source={StaticResource Proxy}, Path=Data.RenameAlbumCommand}" CommandParameter="{Binding .}"></MenuItem>
                                                                    <MenuItem Header="{lex:Loc Search.Navigation.Albums.ContextMenu.Remove}" Command="{Binding Source={StaticResource Proxy}, Path=Data.RemoveAlbumCommand}" CommandParameter="{Binding .}"></MenuItem>
                                                                </ContextMenu>
                                                            </Button.ContextMenu>
                                                            <Button.Template>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Grid.Style>
                                                                            <Style TargetType="Grid">
                                                                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding IsTicked}" Value="true">
                                                                                        <Setter Property="Background" Value="{StaticResource HighlightBrush}"></Setter>
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Grid.Style>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="0"></ColumnDefinition>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition Width="70"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <fa:FontAwesome Icon="Filter" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource DisabledForegroundBrush}"></fa:FontAwesome>
                                                                        <Label FontFamily="Calibri" FontWeight="Light" FontSize="16" Padding="4" Grid.Column="1"  Content="{Binding Name, Converter={StaticResource UnderlineConverter}}"></Label>
                                                                        <Label FontFamily="Calibri" FontWeight="Light" FontSize="16"  Padding="4" Grid.Column="2" Content="{Binding ImageCount, Converter={StaticResource NumberFormatConverter}}" HorizontalAlignment="Right"></Label>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Button.Template>
                                                        </Button>
                                                    </Grid>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Vertical"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </controls:AccordionControl>

                                    <controls:AccordionControl 
                                        HeaderBackground="#80000000"  Margin="0,0,0,5"
                                        Header="{lex:Loc Search.Navigation.Queries}"
                                        Visibility="{Binding DataContext.MainModel.Settings.NavigationSection.ShowQueries, Converter={StaticResource boolToVisCol}, ElementName=NavigationThumbnailGrid}"
                                        State="{Binding DataContext.NavigationSection.QueryState, ElementName=NavigationThumbnailGrid, Mode=TwoWay}"  
                                        CanResize="True"
                                        >
                                        <controls:AccordionControl.ButtonAreaContent>
                                            <Grid Background="{x:Null}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition Width="26"/>
                                                </Grid.ColumnDefinitions>
                                                <!--<Button Grid.Column="1" Style="{StaticResource BorderlessButton}" ToolTip="{lex:Loc Search.Albums.Buttons.SortQueries.ToolTip}" Command="{Binding MainModel.SortAlbumCommand}">
                                                    <fa:FontAwesome Icon="Sort"></fa:FontAwesome>
                                                </Button>-->
                                            </Grid>
                                        </controls:AccordionControl.ButtonAreaContent>

                                        <ItemsControl ItemsSource="{Binding Path=MainModel.Queries}" PreviewMouseWheel="UIElement_OnPreviewMouseWheel">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid Background="Transparent" HorizontalAlignment="Stretch" Margin="2,0,2,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <Button Grid.Column="0" Style="{StaticResource SmallButton}" 
                                                                Tag="{Binding .}"
                                                                ToolTip="{Binding Name}"
                                                                Click="Query_OnClick" RenderTransformOrigin="0.179,0.476">
                                                            <Button.ContextMenu>
                                                                <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                                                    <MenuItem Header="{lex:Loc Search.Navigation.Queries.ContextMenu.Rename}" Command="{Binding Source={StaticResource Proxy}, Path=Data.RenameQueryCommand}" CommandParameter="{Binding .}"></MenuItem>
                                                                    <MenuItem Header="{lex:Loc Search.Navigation.Queries.ContextMenu.Remove}" Command="{Binding Source={StaticResource Proxy}, Path=Data.RemoveQueryCommand}" CommandParameter="{Binding .}"></MenuItem>
                                                                </ContextMenu>
                                                            </Button.ContextMenu>
                                                            <Button.Template>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Grid.Style>
                                                                            <Style TargetType="Grid">
                                                                                <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"/>
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding IsSelected}" Value="true">
                                                                                        <Setter Property="Background" Value="{StaticResource HighlightBrush}"></Setter>
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Grid.Style>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="0"></ColumnDefinition>
                                                                            <ColumnDefinition Width="*"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <fa:FontAwesome Icon="Filter" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{StaticResource DisabledForegroundBrush}"></fa:FontAwesome>
                                                                        <Label FontFamily="Calibri" FontWeight="Light" FontSize="16" Padding="4" Grid.Column="1"  Content="{Binding Name, Converter={StaticResource UnderlineConverter}}"></Label>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </Button.Template>
                                                        </Button>
                                                    </Grid>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Vertical"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </controls:AccordionControl>

                                </StackPanel>

                            </ScrollViewer>


                            <GridSplitter x:Name="GridSplitter2"  
                                          Grid.Row="0" Grid.Column="1"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Stretch"
                                          ShowsPreview="False"
                                          Width="5"
                            />

                            <Grid Grid.Column="2">
                                <DockPanel>
                                    <DockPanel Margin="0,0,0,5" Visibility="{Binding CurrentViewMode, Converter={StaticResource addrVis}}" DockPanel.Dock="Top">
                                        <Button ToolTip="{lex:Loc Search.AddressBar.Buttons.Home.ToolTip}" DockPanel.Dock="Left" Width="28" Command="{Binding GoHome}">
                                            <Button.Resources>
                                                <Style TargetType="fa:ImageAwesome">
                                                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                                </Style>
                                            </Button.Resources>
                                            <fa:ImageAwesome Icon="Home" Width="16" Margin="2"  Foreground="{DynamicResource ForegroundBrush}" VerticalAlignment="Center" HorizontalAlignment="Center">
                                            </fa:ImageAwesome>
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
                                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding MainModel.CurrentFolder.IsHome}" Value="True">
                                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <Button ToolTip="{lex:Loc Search.AddressBar.Buttons.UpOneLevel.ToolTip}" DockPanel.Dock="Left" Width="28" Command="{Binding GoUp}">
                                            <Button.Resources>
                                                <Style TargetType="fa:ImageAwesome">
                                                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
                                                </Style>
                                            </Button.Resources>
                                            <fa:ImageAwesome Icon="ArrowUp" Width="16" Margin="2" VerticalAlignment="Center" HorizontalAlignment="Center">
                                            </fa:ImageAwesome>
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource BorderlessButton}">
                                                    <Setter Property="IsEnabled" Value="True"></Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding MainModel.CurrentFolder.IsHome}" Value="True">
                                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <TextBox  Height="24"
                                                  Padding="5,0,0,0"
                                                  HorizontalAlignment="Stretch" 
                                                  VerticalContentAlignment="Center"
                                                  Text="{Binding FolderPath, UpdateSourceTrigger=PropertyChanged}"
                                                  GotFocus="FolderPath_GotFocus"
                                                  KeyUp="FolderPath_OnKeyDown"
                                        ></TextBox>
                                    </DockPanel>
                                    <Grid Background="AntiqueWhite" Height="30" DockPanel.Dock="Top">
                                        <Grid.Visibility>
                                            <MultiBinding Converter="{StaticResource MultiBoolToVisibilityCollapsedConverter}">
                                                <Binding Path="MainModel.CurrentFolder.IsNotScanned"></Binding>
                                                <Binding Path="IsFolderView"></Binding>
                                            </MultiBinding>
                                        </Grid.Visibility>
                                        <Label Content="{lex:Loc Search.Folders.NotScanned}" Foreground="Black" VerticalContentAlignment="Center" MouseDown="NotScanned_OnMouseDown"></Label>
                                    </Grid>

                                    <Grid Background="AntiqueWhite" Height="30" DockPanel.Dock="Top">
                                        <Grid.Visibility>
                                            <MultiBinding Converter="{StaticResource MultiBoolToVisibilityCollapsedConverter}">
                                                <Binding Path="MainModel.CurrentFolder.IsHome"></Binding>
                                                <Binding Path="IsFolderView"></Binding>
                                            </MultiBinding>
                                        </Grid.Visibility>
                                        <Label Content="{lex:Loc Search.Folders.ManageExcluded}" Foreground="Black" VerticalContentAlignment="Center" MouseDown="NotScanned_OnMouseDown"></Label>
                                    </Grid>

                                    <Grid>
                                        <controls:ThumbnailView 
                                            x:Name="ThumbnailListView" 
                                            Focusable="True"
                                            Images="{Binding Images}" 
                                            Page="{Binding Page, Mode=TwoWay}" 
                                            Pages="{Binding Pages}" 
                                            NSFWBlur="{Binding MainModel.NSFWBlur}"
                                            SelectedImages="{Binding MainModel.SelectedImages, Mode=TwoWay}"
                                            IsEmpty="{Binding IsEmpty}"
                                            IsBusy="{Binding IsBusy}"
                                            Results="{Binding Results}"
                                            PageChangedCommand="{Binding PageChangedCommand}"
                                            SelectedImageEntry="{Binding SelectedImageEntry, Mode=TwoWay}"
                                            OpenCommand="{Binding OpenCommand}"
                                            AddAlbumCommand="{Binding MainModel.AddAlbumCommand}"
                                            AddToAlbumCommand="{Binding MainModel.AddToAlbumCommand}"
                                            RemoveFromAlbumCommand="{Binding MainModel.RemoveFromAlbumCommand}"
                                            RemoveAlbumCommand="{Binding MainModel.RemoveAlbumCommand}"
                                            RenameAlbumCommand="{Binding MainModel.RenameAlbumCommand}"
                                            CopyCommand="{Binding CopyFiles}"
                                            ViewMode="{Binding CurrentViewMode}"
                                            CurrentImage="{Binding CurrentImage}">
                                        </controls:ThumbnailView>

                                        <Grid Background="{x:Null}">
                                            <Grid.Style>
                                                <Style TargetType="Grid">
                                                    <Setter Property="Visibility" Value="Hidden"></Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HasNoImagePaths}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                           
                                            </Grid.Style>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <Label VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="1" FontSize="22" Content="{lex:Loc Search.NoImagePaths}"></Label>
                                            <Button VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2" FontSize="18" Content="{lex:Loc Search.Folders.AddRoot}" Margin="0,10,0,0" Padding="20,10" Click="AddRootFolder_OnClick"></Button>
                                        </Grid>
                                    </Grid>


                                </DockPanel>



                            </Grid>

                        </Grid>


                    </Grid>

                </DockPanel>

            </Grid>

        </Grid>

        <GridSplitter x:Name="GridSplitter"  
                      Grid.Row="0" Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"
                      ShowsPreview="False"
                      Width="5"
        />

        <Grid x:Name="PreviewGrid" Grid.Row="0" Grid.Column="2" >
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="5"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <controls:PreviewPane x:Name="PreviewPane" 
                                  NSFWBlur="{Binding MainModel.NSFWBlur}" 
                                  Image="{Binding CurrentImage}" 
                                  IsLoading="{Binding CurrentImage.IsLoading}"
                                  AllowDrop="True" 
                                  PreviewKeyUp="PreviewPane_OnPreviewKeyUp"
                                  PreviewKeyDown="PreviewPane_OnPreviewKeyDown"
                                  MouseDoubleClick="PreviewPane_OnMouseDoubleClick"
                                  Drop="PreviewPane_OnDrop"></controls:PreviewPane>

            <Grid x:Name="PreviewPaneGrid" Background="{x:Null}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="2"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="1" Background="#A0000000" Margin="10" Visibility="{Binding CurrentImage.IsParametersVisible, Converter={StaticResource boolToVis}}">
                    <controls:MetadataPanel CurrentImage="{Binding CurrentImage}" MetadataSection="{Binding MetadataSection}">
                    </controls:MetadataPanel>
                </Grid>
            </Grid>

            <GridSplitter x:Name="GridSplitterPreview"  
                          Grid.Row="1"

                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          ShowsPreview="False"
                          Height="5"
            />

            <controls:MetadataPanel Grid.Row="2"   CurrentImage="{Binding CurrentImage}">
            </controls:MetadataPanel>

        </Grid>

        <Popup x:Name="FilterPopup" Placement="Center" Width="800" Height="600"
               IsOpen="{Binding IsFilterVisible}"
               KeyDown="FilterPopup_OnKeyDown"
               AllowsTransparency="True" PopupAnimation="Fade">
            <Border         
                BorderBrush="{DynamicResource SecondaryBrush}"
                Background="{DynamicResource PrimaryBrush}"
                BorderThickness="2"
                CornerRadius="10"
                Padding="2">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="15" Opacity="0.8"  ShadowDepth="8" Direction="-90" RenderingBias="Quality" />
                </Border.Effect>
                <Grid Margin="10,5,10,10">
                    <StackPanel>
                        <Label FontSize="20" Margin="0,0,0,0">Filter</Label>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="510"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>
                            <controls:FilterControl  
                                Grid.Row="0"
                                Models="{Binding MainModel.ImageModelNames}"
                                Filter="{Binding Filter}" 
                                SearchCommand="{Binding FilterCommand}" 
                                />
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Height="30" Command="{Binding ClearCommand}">Clear</Button>
                                <Button Grid.Column="1" Height="30" Command="{Binding FilterCommand}">Apply (CTRL+Enter)</Button>
                                <Button Grid.Column="2" Height="30" Command="{Binding HideFilter}">Close</Button>
                            </Grid>
                        </Grid>
                    </StackPanel>
                </Grid>
            </Border>
        </Popup>

        <Popup x:Name="SearchSettingsPopup" Placement="Center" Width="800" Height="600"
               IsOpen="{Binding IsSearchSettingsVisible}"
               KeyDown="SearchSettingsPopup_OnKeyDown"
               AllowsTransparency="True" PopupAnimation="Fade">
            <Border         
                BorderBrush="{DynamicResource SecondaryBrush}"
                Background="{DynamicResource PrimaryBrush}"
                BorderThickness="2"
                CornerRadius="10"
                Padding="2">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="15" Opacity="0.8"  ShadowDepth="8" Direction="-90" RenderingBias="Quality" />
                </Border.Effect>
                <Grid Margin="10,0,10,10" DataContext="{Binding DataContext.SearchSettings, ElementName=MainGrid}">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <StackPanel>
                        <Label FontSize="20" Margin="0,0,0,10">Search Settings</Label>
                        <Grid Margin="0,0,0,10">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="24"/>
                                    <RowDefinition Height="24"/>
                                    <RowDefinition Height="24"/>
                                    <RowDefinition Height="24"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <CheckBox IsChecked="{Binding SearchRawData}">Search in raw metadata (can be very slow)</CheckBox>
                                <RadioButton Grid.Row="1" IsChecked="{Binding SearchNoProperties}">Do not search ComfyUI properties</RadioButton>
                                <RadioButton Grid.Row="2" IsChecked="{Binding SearchAllProperties}">Search in all ComfyUI properties</RadioButton>
                                <RadioButton Grid.Row="3" IsChecked="{Binding SearchNodes}">Search in specific ComfyUI Properties (one property per line)</RadioButton>
                                <TextBox Padding="5" FontFamily="Consolas" Grid.Row="4" Text="{Binding IncludeNodeProperties}" AcceptsReturn="True" VerticalScrollBarVisibility="Auto"></TextBox>
                            </Grid>
                        </Grid>
                    </StackPanel>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" Height="30" Click="HideSearchSettings_OnClick">Close</Button>
                    </Grid>
                </Grid>
            </Border>
        </Popup>


        <Popup x:Name="SearchHelpPopup" Placement="Center" Width="800" Height="600"
               IsOpen="{Binding IsSearchHelpVisible}"
               KeyDown="SearchHelpPopup_OnKeyDown"
               AllowsTransparency="True" PopupAnimation="Fade">
            <Border         
                BorderBrush="{DynamicResource SecondaryBrush}"
                Background="{DynamicResource PrimaryBrush}"
                BorderThickness="2"
                CornerRadius="10"
                Padding="2">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="15" Opacity="0.8"  ShadowDepth="8" Direction="-90" RenderingBias="Quality" />
                </Border.Effect>

                <Grid Margin="10,0,10,10" DataContext="{Binding DataContext, ElementName=MainGrid}">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <mdXaml:MarkdownScrollViewer 
                        Padding="10"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Background="White"
                        ClickAction="OpenBrowser"
                        MarkdownStyle="{Binding SearchHelpStyle}"
                        Markdown="{Binding SearchHelpMarkdown}"
                        behaviors:ScrollSpeed.ScrollSpeed="4"
                        >
                    </mdXaml:MarkdownScrollViewer>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="1" Height="30" Click="HideSearchHelp_OnClick">Close</Button>
                    </Grid>
                </Grid>
            </Border>
        </Popup>

    </Grid>
</local:NavigationPage>
 